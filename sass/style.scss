@use "sass:map";
@use "variable";
@use "header";
@use "fv";
@use "about";
@use "works";
@use "contact";
@use "footer";
@use "works-page";
@use "works-page-item";
@use "works-sobolon";
@use "works-sweets";
@use "works-onomichi";
@use "works-oha";
@use "about-page";
@use "works-pf";


// ローディング画面

// @import "compass/css3";

html,body{width:100%;height:100%;}
.loading-wrapper {
  position: fixed;
  width: 100%;
  height: 100%;
  background-color: rgba(255, 255, 255, 1);
  z-index: 9999;
}
$time: 1s;
.loading {
  position: absolute;
  width: 92px;
  height: 92px;
  left: 50%;
  top: 50%;
  margin: -24px 0 0 -24px;
  span {
    animation-name: loading;
    animation-duration: $time;
    animation-timing-function: ease-in-out;
    animation-iteration-count: infinite;
    display: block;
    margin: 3px;
    width: 40px;
    height: 40px;
    float: left;
    &:nth-child(1) {
      animation-delay: 0s;
      background-color: #E5B0EA;
    }
    &:nth-child(2) {
      animation-delay: $time * .25;
      background-color: #F7DBF0;
    }
    &:nth-child(3) {
      clear: both;
      float: right;
      animation-delay: $time * .5;
      background-color: #C0DBEA;
    }
    &:nth-child(4) {
      animation-delay: $time * .75;
      background-color: #B5A0E9;
    }
  }
}

@keyframes loading {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}



// 共通

html {
  scroll-behavior: smooth;
  scroll-padding-top: variable.$header-height-sp;

  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }

  @include variable.mq("md") {
    scroll-padding-top: variable.$header-height-pc;
  }
}

body {
  font-family: variable.$font-family;
  color: variable.$text-color;
}

.wrapper {
  overflow: hidden;
}

.top-wrapper {
  display: none;
  opacity: 0;
  transition: opacity 1s ease;

  &.is-visible {
    display: block;
    opacity: 1;
  }
}




.main {
  margin-top: variable.$header-height-sp;

  @include variable.mq("md") {
    margin-top: variable.$header-height-pc;
  }
}

.hidden-pc {

  @include variable.mq("md") {
    display: none;
  }
}

.hidden-sp-sm {
  display: none;

  @include variable.mq("sm") {
    display: block;
  }
}

.hidden-sp {
  display: none;
  @include variable.mq("md") {
    display: block;
  }
}

.hidden-sp-pc {
  display: none;

  @include variable.mq("md") {
    display: block;
  }

  @include variable.mq("xl") {
    display: none;
  }
}

// ボタン

.button {
  display: block;
  width: 112px;
  height: 26px;
  background-color: #000;
  color: #fff;
  text-align: center;
  font-size: 12px;
  letter-spacing: 3px;
  padding: 5px;
  transition: background-color 0.3s, color 0.3s;

  @include variable.mq("md") {
    width: 170px;
    height: 38px;
    font-size: 15px;
    letter-spacing: 6px;
    padding: 10px;
  }


  &:hover {
    background-color: #fff;
    color: #000;
    border: solid 1px #000;
    
    @include variable.mq("md") {
      padding-top: 9px;
    }
  }
}


// heading

.heading {
  font-size: 16px;
  display: flex;
  align-items: center;

  @include variable.mq("md") {
    font-size: 23px;
  }

  &::before,
  &::after {
    content: '';
    width: 15px;
    height: 2px;
    background: #000;

    @include variable.mq("md") {
      width: 20px;
    }
  }

  &::before {
    margin-right: 10px;
  }

  &::after {
    margin-left: 10px;
  }
}


// スクロール時のアニメーション


.fade-in-up {
  opacity: 0;
  transform: translateY(40px);
  transition: opacity 1.5s, transform 1s;

  &.is-in-view {
    opacity: 1;
    transform: translateY(0);

  }
}

.fade-in-right {
  opacity: 0;
  transform: translateX(100px); /* 右から */
  transition: opacity 1s, transform 1s;

  &.is-in-view {
    opacity: 1;
    transform: translateX(0);
  }
}

.fade-in-left {
  opacity: 0;
  transform: translateX(-100px); /* 左から */
  transition: opacity 1.5s, transform 1.5s;

  &.is-in-view {
    opacity: 1;
    transform: translateX(0);
  }
}

.fade-in-up-s {
  opacity: 0;
  transform: translateY(10px);
  transition: opacity 1s, transform 1s;
  visibility: hidden;
  
  &.is-in-view {
    opacity: 1;
    transform: translateY(0);
    visibility: visible;
    animation-duration: 1.5s;
    animation-name: myFadeIn;
    animation-fill-mode: forwards;
  }
}

@keyframes myFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}




.blur {
  transition: opacity 1.3s;
  opacity: 0;

  &.is-in-view {
    animation-name: blurAnime;
    animation-duration: 1.3s;
    animation-fill-mode: forwards;
  }
}

@keyframes blurAnime {
  from {
    filter: blur(10px); /* 初めは10pxのぼかし */
    opacity: 0; /* 初期状態は透明 */
  }
  to {
    filter: blur(0); /* 最後はぼかしなし */
    opacity: 1; /* 最後は完全に表示 */
  }
}